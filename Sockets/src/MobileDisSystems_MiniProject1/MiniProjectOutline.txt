------------Project Overview--------------

We spent quite a bit of time on both design and code. Initially we distributed the work in half
and started solving the problems individually. The major obsticles were in implementing the reliable UDP
and the estimate UDP datagram loss as there wasn't much info on the internet on how to achieve this.
Below are some estimates on how much time we spent on each task.  

As a side note, the questionable Datagram socket was a bit tricky to understand with what was meant by reordering. 
Whether it was reordering the content, or reordering the packets as they were sent. We chose to scramble the message.

1)UDPForwarder Design: 15 min, Code: 15 min (ruby)
2)TCPForwarder -> Design:1hour, Code:2hours (java)
3)drop-in replacement for DatagramSocket -> Code: 10 min, 1 hour (ruby)
4)RFC862 udp/tcp echo server -> Design:1 hour, Code:3hours (java)
5)estimate UDP datagram loss Design: 2 hours, Code: 1 hour (ruby)
6)realiable UDP ->Design:4 hours, Code 2 hours (java)